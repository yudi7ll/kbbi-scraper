networks:
  kbbi-scraper:

services:
  app:
    image: node:18-alpine
    restart: unless-stopped
    volumes:
      - .:/app
    command: npm run dev
    working_dir: /app
    depends_on:
      - db
    networks:
      - kbbi-scraper

  db:
    image: mongo:4
    restart: unless-stopped
    expose:
      - 27017
    ports:
      - 27017:27017
    volumes:
      - ./db:/data/db
    environment:
      PUID: 1000
      GUID: 1000
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_DATABASE}
      MONGO_APP_DATABASE: ${DB_DATABASE}
      MONGO_REPLICA_HOST: host.docker.internal
      MONGO_REPLICA_PORT: 27018
    entrypoint: >
      /bin/bash -c '
      echo "rs.initiate()" > /docker-entrypoint-initdb.d/1-init-replicaset.js &&
      echo "db = db.getSiblingDB(process.env[$0]);" > /docker-entrypoint-initdb.d/2-init-db-collection.js &&
      echo "db.createCollection($1, { capped: false });" >> /docker-entrypoint-initdb.d/2-init-db-collection.js &&
      echo "db.init.insert([{ message: $2 }]);" >> /docker-entrypoint-initdb.d/2-init-db-collection.js &&
      echo "password" > /opt/keyfile &&
      chmod 600 /opt/keyfile &&
      chown 999 /opt/keyfile &&
      chgrp 999 /opt/keyfile &&
      /usr/local/bin/docker-entrypoint.sh mongod --replSet rs0 --bind_ip_all --keyFile /opt/keyfile' "'MONGO_APP_DATABASE'" "'init'" "'db initialized successfully'"
    healthcheck:
      test: test $(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
      interval: 10s
      start_period: 30s
    networks:
      - kbbi-scraper

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_USERNAME}:${DB_PASSWORD}@db:27017/kbbi?authSource=admin&retryWrites=true&w=majority
    depends_on:
      - db
    networks:
      - kbbi-scraper
